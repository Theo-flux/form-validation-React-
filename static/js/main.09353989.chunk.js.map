{"version":3,"sources":["components/Header.js","components/Footer.js","components/Form.js","useForm.js","utils/validate.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Footer","href","target","Form","props","useState","firstName","lastName","mail","password","data","setData","errors","setErrors","handleChange","event","name","value","handleSubmit","preventDefault","errorMsg","match","validate","useForm","onSubmit","type","placeholder","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAEe,SAASA,IACtB,OACE,yBAAQC,UAAU,SAAlB,UACE,kEACA,2LCJS,SAASC,IACtB,OACE,iCACE,oBAAGD,UAAU,cAAb,0BACa,mBAAGE,KAAK,8CAA8CC,OAAO,SAA7D,6BADb,cAES,mBAAGD,KAAK,IAAR,4B,yBCJA,SAASE,IAEtB,MCFa,SAAiBC,GAC9B,MAAwBC,mBAAS,CAC/BC,UAAU,GACVC,SAAU,GACVC,KAAK,GACLC,SAAS,KAJX,mBAAOC,EAAP,KAAaC,EAAb,KAOA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KAcA,MAAO,CAACH,OAAMI,aAZd,SAAsBC,GACpB,MAAqBA,EAAMb,OAApBc,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,MACZN,EAAQ,2BAAID,GAAL,kBAAYM,EAAMC,MAUCC,aAN5B,SAAsBH,GACpBA,EAAMI,iBACNN,ECrBW,SAAkBH,GAC/B,IAAMU,EAAW,GAqBjB,OAlBIV,EAAKJ,YACPc,EAASd,UAAY,8BAGnBI,EAAKH,WACPa,EAASb,SAAW,6BAGlBG,EAAKD,WACPW,EAASX,SAAW,4BAGlBC,EAAKF,KAECE,EAAKF,KAAKa,MAhBE,mDAiBpBD,EAASZ,KAAO,mCAFhBY,EAASZ,KAAO,wBAKXY,EDDKE,CAASZ,KAIqBE,UDpBSW,GAA5Cb,EAAP,EAAOA,KAAMI,EAAb,EAAaA,aAAcI,EAA3B,EAA2BA,aAAcN,EAAzC,EAAyCA,OAGzC,OACE,sBAAKb,UAAU,eAAf,UAEE,qBAAKA,UAAU,mBAAf,SACE,8BAAG,wDAAH,gCAEF,uBAAMyB,SAAUN,EAAhB,UACE,gCACE,uBACIO,KAAK,OACLT,KAAK,YACLC,MAAOP,EAAKJ,UACZoB,YAAa,aACbC,SAAUb,IAEhB,mBAAGf,UAAU,cAAb,SAA4Ba,EAAON,YAClCM,EAAON,WAAa,mBAAGP,UAAU,6BAGlC,gCACE,uBACI0B,KAAK,OACLT,KAAK,WACLC,MAAOP,EAAKH,SACZmB,YAAa,YACbC,SAAUb,IAEd,mBAAGf,UAAU,cAAb,SAA4Ba,EAAOL,WAClCK,EAAOL,UAAY,mBAAGR,UAAU,6BAGnC,gCACE,uBACI0B,KAAK,QACLT,KAAK,OACLC,MAAOP,EAAKF,KACZkB,YAAa,gBACbC,SAAUb,IAEd,mBAAGf,UAAU,cAAb,SAA4Ba,EAAOJ,OAClCI,EAAOJ,MAAQ,mBAAGT,UAAU,6BAG/B,gCACE,uBACI0B,KAAK,WACLT,KAAK,WACLC,MAAOP,EAAKD,SACZiB,YAAa,WACbC,SAAUb,IAEd,mBAAGf,UAAU,cAAb,SAA4Ba,EAAOH,WAClCG,EAAOH,UAAY,mBAAGV,UAAU,6BAGnC,8BACE,wBAAQ0B,KAAK,SAAb,qCAGF,4BAAG,qFAAuD,mEGlDnDG,MAZf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACA,iCACE,cAACD,EAAD,IACA,cAACK,EAAD,OAEF,cAACH,EAAD,QCAW6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.09353989.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header(){\r\n  return(\r\n    <header className=\"header\">\r\n      <h1>Learn to code by watching others</h1>\r\n      <p>\r\n        See how experienced developers solve problems in real-time. Watching scripted tutorials is great,\r\n        but understanding how developers think is invaluable.\r\n      </p>\r\n    </header>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n  return(\r\n    <footer>\r\n      <p className=\"attribution\">\r\n      Challenge by <a href=\"https://www.frontendmentor.io?ref=challenge\" target=\"_blank\">Frontend Mentor</a>.\r\n      Coded by <a href=\"#\">Theo Phil</a>\r\n      </p>\r\n    </footer>\r\n  )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport useForm from '../useForm'\r\n\r\nexport default function Form(){\r\n\r\n  const {data, handleChange, handleSubmit, errors} = useForm()\r\n\r\n\r\n  return(\r\n    <div className=\"form-section\">\r\n\r\n      <div className=\"form-section-msg\">\r\n        <p><strong>Try it free 7 days</strong> then $20/mo. thereafter</p>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={data.firstName}\r\n              placeholder =\"First Name\"\r\n              onChange={handleChange}\r\n          />\r\n        <p className=\"error-field\">{errors.firstName}</p>\r\n        {errors.firstName && <i className=\"ri-error-warning-fill\"></i>}\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={data.lastName}\r\n              placeholder =\"Last Name\"\r\n              onChange={handleChange}\r\n          />\r\n          <p className=\"error-field\">{errors.lastName}</p>\r\n          {errors.lastName && <i className=\"ri-error-warning-fill\"></i> }\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n              type=\"email\"\r\n              name=\"mail\"\r\n              value={data.mail}\r\n              placeholder =\"Email Address\"\r\n              onChange={handleChange}\r\n          />\r\n          <p className=\"error-field\">{errors.mail}</p>\r\n          {errors.mail && <i className=\"ri-error-warning-fill\"></i>}\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={data.password}\r\n              placeholder =\"Password\"\r\n              onChange={handleChange}\r\n          />\r\n          <p className=\"error-field\">{errors.password}</p>\r\n          {errors.password && <i className=\"ri-error-warning-fill\"></i>}\r\n        </div>\r\n\r\n        <div>\r\n          <button type=\"submit\">Claim your free trial</button>\r\n        </div>\r\n\r\n        <p><small>By clicking the button, you are agreeing to our <strong>Terms and Services</strong></small></p>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n//\r\n// <i className=\"ri-error-warning-fill\"></i>\r\n// <i className=\"ri-checkbox-circle-fill\"></i>\r\n","import {useState} from 'react'\r\nimport validate from './utils/validate'\r\n\r\nexport default function useForm(props) {\r\n  const [data, setData] = useState({\r\n    firstName:\"\",\r\n    lastName: \"\",\r\n    mail:\"\",\r\n    password:\"\"\r\n  })\r\n\r\n  const [errors, setErrors] = useState(\"\")\r\n\r\n  function handleChange(event) {\r\n    const {name,value} = event.target\r\n    setData({...data, [name]:value})\r\n  }\r\n\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault()\r\n    setErrors(validate(data))\r\n\r\n  }\r\n\r\n  return {data, handleChange, handleSubmit, errors}\r\n}\r\n","export default function validate(data){\r\n  const errorMsg = {}\r\n  const mailValidator = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n  if(!data.firstName){\r\n    errorMsg.firstName = \"First Name cannot be empty\"\r\n  }\r\n\r\n  if(!data.lastName){\r\n    errorMsg.lastName = \"Last Name cannot be empty\"\r\n  }\r\n\r\n  if(!data.password){\r\n    errorMsg.password = \"Password cannot be empty\"\r\n  }\r\n\r\n  if(!data.mail){\r\n    errorMsg.mail = \"Email cannot be empty\"\r\n  }else if(!data.mail.match(mailValidator)) {\r\n    errorMsg.mail = \"Looks like this is not an email\"\r\n  }\r\n\r\n  return errorMsg\r\n}\r\n","import './App.css';\nimport Header from \"./components/Header\"\nimport Footer from \"./components/Footer\"\nimport Form from \"./components/Form\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <main>\n      <Header/>\n      <Form/>\n    </main>\n    <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}